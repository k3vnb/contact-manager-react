{"version":3,"sources":["context.js","components/layout/Header.js","components/pages/About.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","inherits","createClass","key","value","_componentDidMount","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Header","branding","className","href","Link","to","defaultProps","About","Contact","showContactInfo","onDeleteClick","delete","t0","_this2","_this$props$contact","name","email","phone","onClick","style","cursor","float","color","bind","marginRight","Contacts","Fragment","contacts_Contact","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","AddContact","errors","onSubmit","e","_this$state","newContact","preventDefault","abrupt","post","history","push","defineProperty","target","_this$state2","layout_TextInputGroup","updContact","match","params","put","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","EditContact","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.201a2936.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n    switch(action.type) {\n        case 'DELETE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.filter(contact => contact.id !== action.payload)\n            };\n        case 'ADD_CONTACT':\n            return {\n                ...state,\n                contacts: [action.payload, ...state.contacts]\n            };\n        case 'UPDATE_CONTACT':\n            return {\n                ...state,\n                contacts: state.contacts.map(contact => contact.id === action.payload.id ? (contact = action.payload) : contact\n                )\n            };\n        default: \n            return state;\n    }\n} ;\n\nexport class Provider extends Component {\n    state = {\n        contacts: [\n        ],\n        dispatch: action =>\n            this.setState(state => reducer(state, action))\n        };\n\n    async componentDidMount(){\n        const res = await axios.get('https://jsonplaceholder.typicode.com/users');\n        \n        this.setState({contacts: res.data });\n    }\n\n    render(){\n        return (\n            <Context.Provider value={this.state}>\n                {this.props.children}\n            </Context.Provider>\n        );\n    }\n}\n\nexport const Consumer = Context.Consumer;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom'\n\nconst Header = props => {\n    const { branding } = props;\n        return(\n            <nav className=\"nav navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n                <div className=\"container\">\n                    <a href=\"/\" className=\"navbar-brand\">{branding}</a>\n                </div>\n                <ul className=\"navbar-nav mr-auto\">\n                    <li className=\"nav-item\">\n                        <Link to=\"/\" className=\"nav-link\"><i className=\"fas fa-home\" /> Home</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/contact/add\" className=\"nav-link\"><i className=\"fas fa-plus\" /> Add</Link>\n                    </li>\n                    <li className=\"nav-item\">\n                        <Link to=\"/about\" className=\"nav-link\"><i className=\"fas fa-question\" /> About</Link>\n                    </li>\n                </ul>\n            </nav>\n        );\n};\n\nHeader.defaultProps = {\n    branding: 'My App'\n};\n\nHeader.propTypes = {\n    branding: PropTypes.string.isRequired\n};\n\nexport default Header;","import React from 'react'\n\nexport default function About() {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple app to manage contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  )\n}\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Consumer } from '../../context';\nimport axios from 'axios';\n\nclass Contact extends Component {\n    state = {\n        showContactInfo: false\n    };\n\n    onDeleteClick = async (id, dispatch) => {\n        try{\n            await axios\n            .delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n            \n            dispatch({ type: 'DELETE_CONTACT', payload: id });    \n        } catch(e){\n            dispatch({ type: 'DELETE_CONTACT', payload: id});\n        }\n    };\n\n    render(){\n        const { id, name, email, phone } = this.props.contact;\n        const { showContactInfo } = this.state;\n        return (\n            <Consumer>\n                {value => {\n                    const { dispatch } = value;\n                    return (\n                        <div className=\"card card-body mb-3\">\n                        <h4>\n                            {name} \n                            <i \n                                onClick={() => this.setState({ showContactInfo: !this.state.showContactInfo })\n                                } \n                                className=\"fas fa-sort-down\"\n                                style={{ cursor: 'pointer' }} \n                            />\n                            <i className=\"fas fa-times\" \n                                style={{ cursor: 'pointer', float: 'right', color: 'red' }}\n                                onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                            ></i>\n                            <Link to={`contact/edit/${id}`}>\n                                <i \n                                    className=\"fas fa-pencil-alt\"\n                                    style={{\n                                        cursor: 'pointer',\n                                        float: 'right',\n                                        color: 'black',\n                                        marginRight: '1rem'\n                                    }} \n                                />\n                            </Link>\n                        </h4>\n                        {showContactInfo ? (\n                                        <ul className=\"list-group\">\n                                            <li className=\"list-group-item\">Email: {email}</li>\n                                            <li className=\"list-group-item\">Phone: {phone}</li>\n                                        </ul>\n                        ) : null}\n        \n                    </div>\n                    )\n                }}\n            </Consumer>\n        );\n    }\n}\n\nContact.propTypes = {\n    contact: PropTypes.object.isRequired,\n}\n\nexport default Contact;","import React, { Component } from 'react';\nimport Contact from './Contact';\nimport { Consumer } from '../../context';\n\nclass Contacts extends Component {\n\n    render(){\n    return (\n        <Consumer>\n            {value => {\n                const { contacts } = value;\n                return (\n                    <React.Fragment>\n                        <h1 className=\"display-4 mb-2\">\n                            <span className=\"text-danger\">Contact List</span>\n                        </h1>\n                        {contacts.map(contact => (\n                            <Contact \n                                key={contact.id}\n                                contact={contact}\n                            />\n                        ))}\n                    </React.Fragment>\n                );\n            }}\n        </Consumer>\n    );\n};\n}\n\n\nexport default Contacts;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\n\nconst TextInputGroup = ({\n    label,\n    name,\n    value,\n    placeholder,\n    type,\n    onChange,\n    error\n}) => {\n  return (\n        <div className=\"form-group\">\n            <label htmlFor={name}>{label}</label>\n            <input \n                type={type} \n                name={name}\n                className={classnames('form-control form-control-lg', {\n                    'is-invalid': error\n                })}\n                placeholder={placeholder}\n                value={value}\n                onChange={onChange}\n\n            />\n            {error && <div className=\"invalid-feeback\">{error}</div>}\n            \n        </div>\n  );\n};\n\nTextInputGroup.propTypes = {\n    name: PropTypes.string.isRequired,\n    placeholder: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func.isRequired,\n    error: PropTypes.string\n}\n\nTextInputGroup.defaultProps = {\n    type: 'text'\n}\n\nexport default TextInputGroup;\n","import React, { Component } from 'react'\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n// Check for Errors\n        if(name === ''){\n            this.setState({errors: {name: 'Name is required' }});\n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: 'Email is required' }});\n            return;\n        }\n        if(phone === ''){\n            this.setState({errors: {phone: 'Phone is required' }});\n            return;\n        }\n        const newContact = {\n            name,\n            email,\n            phone\n        }\n\n        const res = await axios.post('https://jsonplaceholder.typicode.com/users', newContact);\n\n        dispatch({type: 'ADD_CONTACT', payload: res.data })\n\n\n        // Clear State\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n\n        this.props.history.push('/');\n    };\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n        <Consumer>\n            {value => {\n                const { dispatch } = value;\n                return (\n                    <div className=\"card mb-3\">\n                    <div className=\"card-header\">Add Contact</div>\n                    <div className=\"card-body\">\n                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                        <TextInputGroup\n                            label=\"Name\"\n                            name=\"name\"\n                            placeholder=\"Enter Name...\"\n                            value={name}\n                            onChange={this.onChange}\n                            error={errors.name}\n                        />\n                        <TextInputGroup\n                            label=\"Email\"\n                            name=\"email\"\n                            placeholder=\"Enter Email...\"\n                            value={email}\n                            onChange={this.onChange}\n                            error={errors.email}\n                        />\n                        <TextInputGroup\n                            label=\"Phone\"\n                            name=\"phone\"\n                            placeholder=\"Enter Phone...\"\n                            value={phone}\n                            onChange={this.onChange}\n                            error={errors.phone}                    \n                        />\n\n                        <input \n                            type=\"submit\" \n                            value=\"Add Contact\" \n                            className=\"btn btn-light btn-block\"\n                        />\n            \n                    </form>\n                    </div>\n                  </div>\n                )\n            }}\n        </Consumer>\n    )\n  }\n}\n\nexport default AddContact;","import React, { Component } from 'react'\nimport { Consumer } from '../../context';\nimport TextInputGroup from '../layout/TextInputGroup';\nimport axios from 'axios';\n\nclass AddContact extends Component {\n    state = {\n        name: '',\n        email: '',\n        phone: '',\n        errors: {}\n    }\n\n    async componentDidMount(){\n        const { id } = this.props.match.params;\n        const res = await axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\n        const contact = res.data;\n\n        this.setState({\n            name: contact.name,\n            email: contact.email,\n            phone: contact.phone\n        })\n    }\n\n    onSubmit = async (dispatch, e) => {\n        e.preventDefault();\n        const { name, email, phone } = this.state;\n\n\n        // Check for Errors\n        if(name === ''){\n            this.setState({errors: {name: 'Name is required' }});\n            return;\n        }\n        if(email === ''){\n            this.setState({errors: {email: 'Email is required' }});\n            return;\n        }\n        if(phone === ''){\n            this.setState({errors: {phone: 'Phone is required' }});\n            return;\n        }\n\n        const updContact = {\n            name,\n            email,\n            phone\n        }\n\n        const { id } = this.props.match.params;\n\n        const res = await axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updContact);\n\n        dispatch({ type: 'UPDATE_CONTACT', payload: res.data})\n \n        // Clear State\n        this.setState({\n            name: '',\n            email: '',\n            phone: '',\n            errors: {}\n        })\n\n        this.props.history.push('/');\n    };\n\n    onChange = e => this.setState({ [e.target.name]: e.target.value })\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n        <Consumer>\n            {value => {\n                const { dispatch } = value;\n                return (\n                    <div className=\"card mb-3\">\n                    <div className=\"card-header\">Add Contact</div>\n                    <div className=\"card-body\">\n                    <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                        <TextInputGroup\n                            label=\"Name\"\n                            name=\"name\"\n                            placeholder=\"Enter Name...\"\n                            value={name}\n                            onChange={this.onChange}\n                            error={errors.name}\n                        />\n                        <TextInputGroup\n                            label=\"Email\"\n                            name=\"email\"\n                            placeholder=\"Enter Email...\"\n                            value={email}\n                            onChange={this.onChange}\n                            error={errors.email}\n                        />\n                        <TextInputGroup\n                            label=\"Phone\"\n                            name=\"phone\"\n                            placeholder=\"Enter Phone...\"\n                            value={phone}\n                            onChange={this.onChange}\n                            error={errors.phone}                    \n                        />\n\n                        <input \n                            type=\"submit\" \n                            value=\"Update Contact\" \n                            className=\"btn btn-light btn-block\"\n                        />\n            \n                    </form>\n                    </div>\n                  </div>\n                )\n            }}\n        </Consumer>\n    )\n  }\n}\n\nexport default AddContact;","import React from 'react'\n\nexport default function NotFound() {\n  return (\n    <div>\n      <h1 className=\"display-4\"><span className=\"danger-text\">404 Page Not Found</span></h1>\n      <p className=\"lead\">Sorry, that page does not exist</p>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { Provider } from './context';\nimport Header from './components/layout/Header';\nimport About from './components/pages/About';\nimport Contacts from './components/contacts/Contacts';\nimport AddContact from './components/contacts/AddContact';\nimport EditContact from './components/contacts/EditContact';\nimport NotFound from './components/pages/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n        <div className=\"App\">\n          <Header />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}